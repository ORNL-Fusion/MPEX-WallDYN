This is WallDYN using C++ and pyWallDYN generated equations, C2017 K. Schmid
Current working directory:
	"/home/cloud/code/pyWallDYN/GITR_Coupling/cases/D_N_Al_W"
Command line argument listing:
	Argument 0: /home/cloud/code/pyWallDYN/solver/release/walldyn_solver
	Argument 1: --model
	Argument 2: ProtoEmpex_cppMODEL.XML
	Argument 3: --runtime
	Argument 4: ProtoEmpex_cppRunTime.XML
	Argument 5: --control
	Argument 6: ProtoEmpex_control.xml
	Argument 7: --minfloat
	Argument 8: 1.0E-14
	Argument 9: --npar
	Argument 10: 4
	Argument 11: --verbostiy
	Argument 12: 0
Missing "linsys":>>>>INFO::This may trigger IDACalcIC<<<<
Enabling 4 parallel OpenMP threads
omp_get_num_procs = 6
Thread #0 of 4 calling in
Thread #1 of 4 calling in
Thread #2 of 4 calling in
This is a RELEASE build!
	verbostiy level 0
@walldynsolver: Creating compiler
@walldynsolver: Registering custom functions...
	....UnitStep
	....time_dependent_input
	....SublimationModel12elem
	....SublimationModel13elem
	....SYieldModel12elem
	....SYieldModel13elem
	....SYieldModel32elem
	....SYieldModel42elem
	....SYieldModel43elem
	....ReflModel12elem
	....ReflModel13elem
	....ReflModel12elemMOD1
	....ReflModel13elemMOD1
	....ReflModel32elem
	....ReflModel42elem
	....ReflModel43elem
Parsing model input file: ProtoEmpex_cppMODEL.XML....
Time variable name set to t
....Success!
Parsing constants & custom function input file: ProtoEmpex_cppRunTime.XML....
INFO::sylddbentry4->Storing projectile d <-> WDID 0 / target al <-> WDID 1
INFO::sylddbentry4->Storing projectile al <-> WDID 1 / target al <-> WDID 1
INFO::sylddbentry4->Storing projectile n <-> WDID 2 / target al <-> WDID 1
INFO::sylddbentry4->Storing projectile w <-> WDID 3 / target al <-> WDID 1
INFO::sylddbentry4->Storing projectile d <-> WDID 0 / target n <-> WDID 2
INFO::sylddbentry4->Storing projectile al <-> WDID 1 / target n <-> WDID 2
INFO::sylddbentry4->Storing projectile n <-> WDID 2 / target n <-> WDID 2
INFO::sylddbentry4->Storing projectile w <-> WDID 3 / target n <-> WDID 2
INFO::sylddbentry4->Storing projectile d <-> WDID 0 / target w <-> WDID 3
INFO::sylddbentry4->Storing projectile al <-> WDID 1 / target w <-> WDID 3
INFO::sylddbentry4->Storing projectile n <-> WDID 2 / target w <-> WDID 3
INFO::sylddbentry4->Storing projectile w <-> WDID 3 / target w <-> WDID 3
INFO::sylddbentry4->Accumulating element number 0 in simulation corresponds to target element number 0 (al) in the sputter db
INFO::sylddbentry4->Accumulating element number 1 in simulation corresponds to target element number 1 (n) in the sputter db
INFO::sylddbentry4->Accumulating element number 2 in simulation corresponds to target element number 2 (w) in the sputter db
INFO::rylddbentry4->Storing projectile d <-> WDID 0
INFO::rylddbentry4->Storing projectile al <-> WDID 1
INFO::rylddbentry4->Storing projectile n <-> WDID 2
INFO::rylddbentry4->Storing projectile w <-> WDID 3
....Success!

*********************************************************
COMPILER-INFO->Compiling Model and linking to runtime vars
*********************************************************
COMPILER-INFO->Matched 7332 solution vars to initial conditions
COMPILER-INFO->Matched 7 custom functions to local implementations
COMPILER-INFO->Initialized 2444 constant values from runtime config
COMPILER-INFO->Time variable named t added at value 0.000000
COMPILER-INFO->Start compiling 7332 residuum expressions....

COMPILER-INFO->Compiling 7332 residuum expressions on 4 threads took 192.242 ms

COMPILER-INFO->Successfully compilepostproc 7332 residuum functions
COMPILER-INFO->Start building jacobian....
COMPILER-INFO->Start compiling 84546 solution variable jacobian expressions....

COMPILER-INFO->Compiling 84546 solution variable jacobian expressions on 4 threads took 521.282 ms

COMPILER-INFO->Start compiling 282 ODE variable jacobian expressions....

COMPILER-INFO->Compiling 282 ODE variable jacobian expressions on 4 threads took 0.12999 ms
COMPILER-INFO->Successfully compiled 7332x7332 with 84828 non zero entries jacobian
COMPILER-INFO->Compiling 282 expressions for initial values of ODE-variables

COMPILER-INFO->Compiling 282 initial values of ODE-variables on 4 threads took 17.4778 ms
COMPILER-INFO->Compiling 6768 expressions for initial values of Algebraic equation variables

COMPILER-INFO->Compiling 282 initial values of Algebraic equation variables on 4 threads took 99.9466 ms
Add initial conditions for Algebraic equation variables using initial value expressions if any:
Add initial conditions for ODE equation variables using initial value expressions if any:
InitSunduals-INFO->Initialized 6768 algebraic and 282 ode variables using expressions
exprtkcompiler::StoreVarState->Turning ToStdOut off  because  (m_verbosity <= 5)
exprtkcompiler::StoreVarState->Trying at After_EvaluateInitCondExpr.dat
exprtkpostproc::compilepostproc()->Compiling 1128 post processing expression

*********************************************************
COMPILER-INFO->Compiling Compilation completed
*********************************************************
Sundialer_impl::InitInstance complete
IDAModel going out of scope...
...Done
...No linear system to solve, proceeding with DAE solution...
Initializing solver from input file: ProtoEmpex_control.xml....
Solution state will be stored after each stepOutput base path ./results
Output base file name ProtoEmpex.dat
Parsing
	0.1,1,5,10,20,50,100
for time steps
Parsed 7 time values from <OutputAt/> node
....Success!
Run the model
######################################################
BEGIN Iterating solution
######################################################
BEGIN Initializing solver
Add initial conditions for Algebraic equation variables using initial value expressions if any:
Add initial conditions for ODE equation variables using initial value expressions if any:
InitSunduals-INFO->Initialized 6768 algebraic and 282 ode variables using expressions
InitSunduals-INFO->Calculating initial Residuum norm using rel-tol: 0.0001 & abs-tol: 1e-06
	Initial residuum calculation on 4 threads took 2.499 ms
InitSunduals-INFO->Initial WRMS of residuum = 150.628 > 1 --> IDACalcIC will BE called
....SUCCESS
FINISHED Initializing solver
Running IDACalcIC(IDA_YA_YDP_INIT)...
IDASolver::runIDACalcIC()->WRMS of residuum before IDACalcIC(IDA_YA_YDP_INIT) = 150.628
Jacobian-UpdatePostProc triggered @ t = 0                        Jacobian-UpdatePostProc triggered @ t = 0                        ...Success after:
	0 backtrack steps
IDASolver::runIDACalcIC()-> AFTER IDACalcIC the WRMS of residuum = 0.00290041 < 1 --> SUCCESS

Storing state @ -1 sec. @ ./results/ProtoEmpex_-1.000000.dat
Storing post processing data @ -1 sec. @ ./results/ProtoEmpex_ppext_-1.000000.dat
Storing custom function tests @ ./results/ProtoEmpex_cust_func_tests.dat
exprtkcompiler::StoreVarState->Turning ToStdOut off  because  (m_verbosity <= 5)
exprtkcompiler::StoreVarState->Trying at ./results/ProtoEmpex_cust_func_tests.dat
IDASetErrFile to ida_error_log.log
Storing custom function tests @ ./results/ProtoEmpex_init_state.dat
exprtkcompiler::StoreVarState->Turning ToStdOut off  because  (m_verbosity <= 5)
exprtkcompiler::StoreVarState->Trying at ./results/ProtoEmpex_init_state.dat
Storing solution state after each time step @ ./results/ProtoEmpex_sol_states.nc
Storing post processing state after each time step @ ./results/ProtoEmpex_post_states.nc
Storing constants @ ./results/ProtoEmpex_constants.dat
BEGIN iterations
Jacobian-UpdatePostProc triggered @ t = 3.71394e-05                        IDASolve performed single initial step to 3.71394e-05 sec.
	Storing time t = 0.0
Calling IDAGetDky for interpolation at t = 0
	(Should be close or equal to 0.0)
Storing state @ 0 sec. @ ./results/ProtoEmpex_0.000000.dat
Storing post processing data @ 0 sec. @ ./results/ProtoEmpex_ppext_0.000000.dat
Iterating to t = 0.1 
Jacobian-UpdatePostProc triggered @ t = 0.000297115                        Jacobian-UpdatePostProc triggered @ t = 0.00059423                        Jacobian-UpdatePostProc triggered @ t = 0.0020798                        Jacobian-UpdatePostProc triggered @ t = 0.00505095                        Jacobian-UpdatePostProc triggered @ t = 0.0157471                        Jacobian-UpdatePostProc triggered @ t = 0.0285825                        Jacobian-UpdatePostProc triggered @ t = 0.0499747                        Storing state @ 0.1 sec. @ ./results/ProtoEmpex_0.100000.dat
Storing post processing data @ 0.1 sec. @ ./results/ProtoEmpex_ppext_0.100000.dat
Iterating to t = 1 
Jacobian-UpdatePostProc triggered @ t = 0.134688                        Jacobian-UpdatePostProc triggered @ t = 0.257908                        Jacobian-UpdatePostProc triggered @ t = 0.411932                        Storing state @ 1 sec. @ ./results/ProtoEmpex_1.000000.dat
Storing post processing data @ 1 sec. @ ./results/ProtoEmpex_ppext_1.000000.dat
IDASolve reached 1 seconds with 60 steps
Iterating to t = 5 
Jacobian-UpdatePostProc triggered @ t = 1.86494                        Writing 100 cached solution states to file (allready contains 0 state entries)
Writing 100 cached solution states to file (allready contains 0 state entries)
Jacobian-UpdatePostProc triggered @ t = 4.33697                        Storing state @ 5 sec. @ ./results/ProtoEmpex_5.000000.dat
Storing post processing data @ 5 sec. @ ./results/ProtoEmpex_ppext_5.000000.dat
Iterating to t = 10 
Jacobian-UpdatePostProc triggered @ t = 7.81741                        Storing state @ 10 sec. @ ./results/ProtoEmpex_10.000000.dat
Storing post processing data @ 10 sec. @ ./results/ProtoEmpex_ppext_10.000000.dat
Iterating to t = 20 
Jacobian-UpdatePostProc triggered @ t = 20.475                        Storing state @ 20 sec. @ ./results/ProtoEmpex_20.000000.dat
Storing post processing data @ 20 sec. @ ./results/ProtoEmpex_ppext_20.000000.dat
Iterating to t = 50 
Jacobian-UpdatePostProc triggered @ t = 28.1191                        Storing state @ 50 sec. @ ./results/ProtoEmpex_50.000000.dat
Storing post processing data @ 50 sec. @ ./results/ProtoEmpex_ppext_50.000000.dat
Iterating to t = 100 
Jacobian-UpdatePostProc triggered @ t = 72.8077                        Storing state @ 100 sec. @ ./results/ProtoEmpex_100.000000.dat
Storing post processing data @ 100 sec. @ ./results/ProtoEmpex_ppext_100.000000.dat
IDASolve reached 100 seconds with 163 steps
Storing custom function tests @ ./results/ProtoEmpex_cust_func_tests_final.dat
exprtkcompiler::StoreVarState->Turning ToStdOut off  because  (m_verbosity <= 5)
exprtkcompiler::StoreVarState->Trying at ./results/ProtoEmpex_cust_func_tests_final.dat
END iterations: SUCCESSFULLY iterated through all requested time steps

######################################################
END Iterating solution
######################################################
Writing 64 cached solution states to file (allready contains 100 state entries)
Writing 64 cached solution states to file (allready contains 100 state entries)
Sundialer complete on 4 threads after 2634.926479 (ms)
walldyn_solver returned with code 0
