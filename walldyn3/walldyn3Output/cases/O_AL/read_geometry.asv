clear all
close all

% Read in GITR geometry file
fid = fopen('gitrGeometryPointPlane3d.cfg');
tline = fgetl(fid);
tline = fgetl(fid);
for i=1:18
    tline = fgetl(fid);
    evalc(tline);
end

% Read in surface index groupings.
% For this simulation there are 94 triangle groups.
% Some groups may have ~40 triangles, some may have as many as 300.
% We have discretized the helicon region in z (15 sections) and theta (6
% sections, and 4 radial sections at the target.
nSurfaces = 94;
for i=1:nSurfaces
    surf_ind_cell{i} = readmatrix(strcat('surface/surface_inds_',string(i)));
end

% For plotting different sections
colors = {'r','g','b','c','m','y'}

% Plot the complete GITR geometry (all the same color)
subset = 1:length(x1);
figure          % x1, x2, x3, etc represent the triangle vertex coordinates
plot_geom(subset,'g',x1,x2,x3,y1,y2,y3,z1,z2,z3)

% Plot each surface grouping (94 sections), and only the helicon and target
figure
hold on
for i=1:nSurfaces
    subset = surf_ind_cell{i};
    plot_geom(subset,colors{mod(i,6)+1},x1,x2,x3,y1,y2,y3,z1,z2,z3)
end

% Total area of the groupings used for WALLDYN can be found below
% Units are in meters squared
area_surfs = zeros(1,nSurfaces);
for i=1:nSurfaces
    area_surfs(i) = sum(area(surf_ind_cell{i}));
end

% Average fields used for WALLDYN can be found below
% Units are eV for temperatures, m-2s-1 for flux, potential in Volts,degrees for angles
ti = zeros(1,nSurfaces);
te = zeros(1,nSurfaces);
flux = zeros(1,nSurfaces);
potential = zeros(1,nSurfaces);
angle = zeros(1,nSurfaces);

ti_geom = readmatrix('fields/ti.txt');
te_geom = readmatrix('fields/te.txt');
flux_geom = readmatrix('fields/flux.txt');
potential_geom = readmatrix('fields/potential.txt');
angle_geom = readmatrix('fields/angle.txt');
for i=1:nSurfaces
    ti(i) = mean(ti_geom(surf_ind_cell{i}));
    te(i) = mean(te_geom(surf_ind_cell{i}));
    flux(i) = mean(flux_geom(surf_ind_cell{i}));
    potential(i) = mean(potential_geom(surf_ind_cell{i}));
    angle(i) = mean(angle_geom(surf_ind_cell{i}));
end


subset = 1:length(x1);

X = [transpose(x1(subset)),transpose(x2(subset)),transpose(x3(subset))];
Y = [transpose(y1(subset)),transpose(y2(subset)),transpose(y3(subset))];
Z = [transpose(z1(subset)),transpose(z2(subset)),transpose(z3(subset))];
figure
patch(transpose(X),transpose(Y),transpose(Z),angle,'FaceAlpha',1,'EdgeAlpha', 0.3)%,impacts(surface)
title('ProtoMPEX Geometry B-field angle')
xlabel('x [m]')
ylabel('y [m]')
zlabel('z [m]')
set(gca,'fontsize',13)
function plot_geom(subset,color,x1,x2,x3,y1,y2,y3,z1,z2,z3)
X = [transpose(x1(subset)),transpose(x2(subset)),transpose(x3(subset))];
Y = [transpose(y1(subset)),transpose(y2(subset)),transpose(y3(subset))];
Z = [transpose(z1(subset)),transpose(z2(subset)),transpose(z3(subset))];
patch(transpose(X),transpose(Y),transpose(Z),color,'FaceAlpha',.3,'EdgeAlpha', 0.3)%,impacts(surface)
title('ProtoMPEX Geometry')
xlabel('x [m]')
ylabel('y [m]')
zlabel('z [m]')
set(gca,'fontsize',13)
% set(gcf,'color','w')
% set(cb1,'fontsize',14);
%axis equal
end